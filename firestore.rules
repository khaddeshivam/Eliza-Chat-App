rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read access to all users
    match /{document=**} {
      allow read: if true;
    }

    // Allow authenticated users to write to their own profile
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    function isValidPhoneNumber(phoneNumber) {
      // Ensure phone number starts with +91 and has exactly 10 digits after
      return phoneNumber.matches('^\\+91\\d{10}$');
    }

    function isValidUserDocument(data) {
      return isValidPhoneNumber(data.phone_number) &&
             !data.test_account;
    }

    function isValidChatDocument(data) {
      return data.participants != null &&
             data.participants.size() > 0 &&
             data.participants.size() <= 50 &&
             data.participants.hasAny([request.auth.uid]) &&
             data.last_message != null &&
             data.last_message_time != null &&
             data.last_sender_id != null &&
             data.is_group != null &&
             data.name != null;
    }

    // Test users collection - no auth required for development
    match /test_users/{userId} {
      allow read, write: if true;
    }

    // Users collection
    match /users/{userId} {
      // Allow phone number verification before authentication
      allow read: if request.query.filters.size() == 1 &&
                    request.query.filters[0].field.fieldPath == 'phone_number' &&
                    request.query.filters[0].op == '==' &&
                    isValidPhoneNumber(request.query.filters[0].value.stringValue);
      
      // Allow authenticated users to read their own document
      allow read: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow authenticated users to create their own document
      allow create: if isAuthenticated() &&
                    request.auth.uid == userId &&
                    isValidUserDocument(request.resource.data);
      
      // Allow authenticated users to update their own document
      allow update: if isAuthenticated() &&
                    request.auth.uid == userId &&
                    isValidUserDocument(request.resource.data);
      
      allow delete: if false;
    }

    // Chats collection
    match /chats/{chatId} {
      allow read: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
      
      allow create: if isAuthenticated() && 
        isValidChatDocument(request.resource.data) &&
        request.auth.uid in request.resource.data.participants;
      
      allow update: if isAuthenticated() && 
        request.auth.uid in resource.data.participants &&
        isValidChatDocument(request.resource.data);
      
      allow delete: if false;
    }

    // Messages subcollection
    match /chats/{chatId}/messages/{messageId} {
      allow read: if isAuthenticated() && 
        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      
      allow create: if isAuthenticated() && 
        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      
      allow update, delete: if false;
    }
  }
}